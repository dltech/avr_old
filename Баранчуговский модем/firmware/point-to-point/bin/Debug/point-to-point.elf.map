Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
                              obj/Debug/rfm_22_23.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
                              obj/Debug/main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
                              obj/Debug/main.o (__eerd_byte_m8)

Allocating common symbols
Common symbol       size              file

device_address      0x1               obj/Debug/main.o
packet_condition    0x1               obj/Debug/main.o
npack               0x2               obj/Debug/main.o
buffer              0x100             obj/Debug/main.o
connect_address     0x1               obj/Debug/main.o
header              0x3               obj/Debug/main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
LOAD obj/Debug/configure.o
LOAD obj/Debug/main.o
LOAD obj/Debug/modem.o
LOAD obj/Debug/rfm_22_23.o
LOAD obj/Debug/rs485.o
LOAD /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x906
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_6
                0x000000000000005c                __vector_3
                0x000000000000005c                __vector_13
                0x000000000000005c                __vector_17
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_9
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_10
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
 .text          0x000000000000005e        0x0 obj/Debug/configure.o
 .text          0x000000000000005e      0x25c obj/Debug/main.o
                0x000000000000005e                led_flash
                0x00000000000000f0                __vector_11
                0x000000000000016a                __vector_1
                0x00000000000001b6                __vector_2
                0x0000000000000206                init
                0x00000000000002a8                main
 .text          0x00000000000002ba       0xba obj/Debug/modem.o
                0x00000000000002ba                packet_handler
 .text          0x0000000000000374      0x424 obj/Debug/rfm_22_23.o
                0x0000000000000374                rfm_22_read_burst
                0x00000000000003a2                rfm_22_write_burst
                0x00000000000003d0                rfm_22_write
                0x00000000000003e8                rfm_22_read
                0x0000000000000402                rfm_22_init
                0x0000000000000562                rfm_22_clear
                0x0000000000000584                rfm_22_wait_event
                0x00000000000005c8                rfm_22_transmit_command
                0x00000000000005e8                rfm_22_transmit_packet
                0x000000000000065c                rfm_22_transmit_packet_256
                0x000000000000067a                rfm_22_transmit_small_packet
                0x00000000000006b8                rfm_22_receive_packet
                0x0000000000000746                rfm_22_receive_packet_256
                0x0000000000000764                rfm_22_read_small_packet
 .text          0x0000000000000798      0x15a obj/Debug/rs485.o
                0x0000000000000798                rs485_set_baudrate
                0x00000000000007da                rs485_init
                0x00000000000007f4                rs485_receive_packet
                0x00000000000008ae                rs485_transmit_packet
 .text          0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text          0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text          0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
                0x00000000000008f2                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc.mul
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000008f2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000008f2       0x10 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
                0x00000000000008f2                __eerd_byte_m8
                0x0000000000000902                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000902        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                0x0000000000000902                exit
                0x0000000000000902                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000902        0x4 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000906                _etext = .

.data           0x0000000000800060       0x14 load address 0x0000000000000906
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 obj/Debug/configure.o
 .data          0x0000000000800060        0x0 obj/Debug/main.o
 .data          0x0000000000800060        0x0 obj/Debug/modem.o
 .data          0x0000000000800060        0x0 obj/Debug/rfm_22_23.o
 .data          0x0000000000800060        0xd obj/Debug/rs485.o
 .data          0x000000000080006d        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .data          0x000000000080006d        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .data          0x000000000080006d        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x000000000080006d        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
 *(.data*)
 *(.rodata)
 .rodata        0x000000000080006d        0x6 obj/Debug/rfm_22_23.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800074                . = ALIGN (0x2)
 *fill*         0x0000000000800073        0x1 00
                0x0000000000800074                _edata = .
                0x0000000000800074                PROVIDE (__data_end, .)

.bss            0x0000000000800074      0x108
                0x0000000000800074                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800074        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800074        0x0 obj/Debug/configure.o
 .bss           0x0000000000800074        0x0 obj/Debug/main.o
 .bss           0x0000000000800074        0x0 obj/Debug/modem.o
 .bss           0x0000000000800074        0x0 obj/Debug/rfm_22_23.o
 .bss           0x0000000000800074        0x0 obj/Debug/rs485.o
 .bss           0x0000000000800074        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800074        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800074        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800074        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800074      0x108 obj/Debug/main.o
                0x0000000000800074                device_address
                0x0000000000800075                packet_condition
                0x0000000000800076                npack
                0x0000000000800078                buffer
                0x0000000000800178                connect_address
                0x0000000000800179                header
                0x000000000080017c                PROVIDE (__bss_end, .)
                0x0000000000000906                __data_load_start = LOADADDR (.data)
                0x000000000000091a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080017c        0x0
                0x000000000080017c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080017c                PROVIDE (__noinit_end, .)
                0x000000000080017c                _end = .
                0x000000000080017c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x4
 *(.eeprom*)
 .eeprom        0x0000000000810000        0x4 obj/Debug/main.o
                0x0000000000810000                dummy
                0x0000000000810002                device_address_eep
                0x0000000000810003                connect_address_eep
                0x0000000000810004                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x31a4
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
 .stab          0x00000000000006cc      0x3b4 obj/Debug/configure.o
                                        0x3c0 (size before relaxing)
 .stab          0x0000000000000a80     0x11b8 obj/Debug/main.o
                                       0x1254 (size before relaxing)
 .stab          0x0000000000001c38      0x300 obj/Debug/modem.o
                                        0x570 (size before relaxing)
 .stab          0x0000000000001f38      0xd2c obj/Debug/rfm_22_23.o
                                        0xf24 (size before relaxing)
 .stab          0x0000000000002c64      0x4b0 obj/Debug/rs485.o
                                        0x6e4 (size before relaxing)
 .stab          0x0000000000003114       0x90 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
                                         0x9c (size before relaxing)

.stabstr        0x0000000000000000     0x2bcd
 *(.stabstr)
 .stabstr       0x0000000000000000     0x2bcd /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 obj/Debug/rfm_22_23.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(bin/Debug/point-to-point.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__bss_end                                         /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
                                                  obj/Debug/main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
                                                  obj/Debug/rs485.o
                                                  obj/Debug/rfm_22_23.o
__eerd_byte_m8                                    /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
                                                  obj/Debug/main.o
__heap_end                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__init                                            /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__stack                                           /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_1                                        obj/Debug/main.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_10                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_11                                       obj/Debug/main.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_12                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_13                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_14                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_15                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_16                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_17                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_18                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_2                                        obj/Debug/main.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_3                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_4                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_5                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_6                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_7                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_8                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_9                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vector_default                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
__vectors                                         /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
_exit                                             /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
buffer                                            obj/Debug/rs485.o
                                                  obj/Debug/rfm_22_23.o
                                                  obj/Debug/main.o
connect_address                                   obj/Debug/rfm_22_23.o
                                                  obj/Debug/main.o
connect_address_eep                               obj/Debug/main.o
device_address                                    obj/Debug/rfm_22_23.o
                                                  obj/Debug/main.o
device_address_eep                                obj/Debug/main.o
dummy                                             obj/Debug/main.o
exit                                              /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
header                                            obj/Debug/modem.o
                                                  obj/Debug/main.o
init                                              obj/Debug/main.o
led_flash                                         obj/Debug/main.o
main                                              obj/Debug/main.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8.o
npack                                             obj/Debug/rs485.o
                                                  obj/Debug/rfm_22_23.o
                                                  obj/Debug/modem.o
                                                  obj/Debug/main.o
packet_condition                                  obj/Debug/rs485.o
                                                  obj/Debug/rfm_22_23.o
                                                  obj/Debug/modem.o
                                                  obj/Debug/main.o
packet_handler                                    obj/Debug/modem.o
                                                  obj/Debug/main.o
rfm_22_clear                                      obj/Debug/rfm_22_23.o
                                                  obj/Debug/main.o
rfm_22_init                                       obj/Debug/rfm_22_23.o
                                                  obj/Debug/main.o
rfm_22_read                                       obj/Debug/rfm_22_23.o
rfm_22_read_burst                                 obj/Debug/rfm_22_23.o
                                                  obj/Debug/modem.o
rfm_22_read_small_packet                          obj/Debug/rfm_22_23.o
rfm_22_receive_packet                             obj/Debug/rfm_22_23.o
                                                  obj/Debug/modem.o
rfm_22_receive_packet_256                         obj/Debug/rfm_22_23.o
                                                  obj/Debug/modem.o
rfm_22_transmit_command                           obj/Debug/rfm_22_23.o
                                                  obj/Debug/modem.o
rfm_22_transmit_packet                            obj/Debug/rfm_22_23.o
                                                  obj/Debug/modem.o
                                                  obj/Debug/main.o
rfm_22_transmit_packet_256                        obj/Debug/rfm_22_23.o
                                                  obj/Debug/modem.o
                                                  obj/Debug/main.o
rfm_22_transmit_small_packet                      obj/Debug/rfm_22_23.o
rfm_22_wait_event                                 obj/Debug/rfm_22_23.o
rfm_22_write                                      obj/Debug/rfm_22_23.o
                                                  obj/Debug/rs485.o
                                                  obj/Debug/modem.o
                                                  obj/Debug/main.o
rfm_22_write_burst                                obj/Debug/rfm_22_23.o
rs485_init                                        obj/Debug/rs485.o
                                                  obj/Debug/main.o
rs485_receive_packet                              obj/Debug/rs485.o
                                                  obj/Debug/main.o
rs485_set_baudrate                                obj/Debug/rs485.o
rs485_transmit_packet                             obj/Debug/rs485.o
                                                  obj/Debug/modem.o
